@prefix premis: <http://www.loc.gov/premis/rdf/v3/> .
@prefix evType: <http://id.loc.gov/vocabulary/preservation/eventType> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix cc: <http://creativecommons.org/ns#> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix schema: <https://schema.org/> .
@prefix org: <http://www.w3.org/ns/org#> .
@prefix rov: <http://www.w3.org/ns/regorg#>.
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix meemoo: <http://data.meemoo.be/ns/> .
@prefix mh: <http://data.meemoo.be/ns/mh/> .

@base <http://data.meemoo.be/ns/terms/events> .


<> a skos:ConceptScheme ;
  dct:title "Meemoo PREMIS events thesaurus".

# --- van Library of Congress

evType:acc a skos:Concept;
    skos:prefLabel "accession" .

evType:fix a skos:Concept;
    skos:prefLabel "fixity check" .



# --- digitalisering PREMIS events

# | ID | Event name     | mandatory | linkingAgentIdentifierType | premis:linkingObjectIdentifierType | linkingObjectIdentifierValue    | linkingObjectIdentifierRole |                  USE                  |
# |----|----------------|-----------|----------------------------|------------------------------------|---------------------------------|-----------------------------|:-------------------------------------:|
# | 1  | INSPECTION     |     x     | VIAA SP Agent ID           | VIAA Carrier ID                    | pid                             | source                      | DISK-SHARE-NOEVENTS                   |

<#inspection> a skos:Concept;
    skos:prefLabel "inspection"@en;
    rdfs:subClassOf premis:Event.


# | 2  | IDENTIFICATION |     x     | VIAA SP Agent ID           | VIAA Object ID                     | pid_cdinfo.xml                  | outcome                     | DISK-SHARE-NOEVENTS                   |

<#identification>  a skos:Concept;
    skos:prefLabel "identification"@en;
    rdfs:subClassOf premis:Event.

# | 3  | CLEANING       |           | VIAA SP Agent ID           | VIAA Carrier ID                    | pid                             | source                      | DISK-SHARE-NOEVENTS                   |

<#cleaning>  a skos:Concept;
    skos:prefLabel "cleaning"@en;
    rdfs:subClassOf premis:Event.

# | 4  | REPAIR         |           | VIAA SP Agent ID           | VIAA Carrier ID                    | pid                             | source                      | DISK-SHARE-NOEVENTS                   |

<#repair>  a skos:Concept;
    skos:prefLabel "repair"@en;
    rdfs:subClassOf premis:Event.

# | 5  | MIGRATION      |     x     | VIAA SP Agent ID           | VIAA Object ID VIAA Object ID      | pid_iso.iso pid_ddrescue.xml    | source outcome              | TAPE-SHARE-EVENTS DISK-SHARE-NOEVENTS |

<#migration>  a skos:Concept;
    skos:prefLabel "migration"@en;
    owl:equivalentClass evType:mig;
    rdfs:subClassOf premis:Event.

# | 6  | VALIDATION     |     x     | VIAA SP Agent ID           | VIAA Object ID                     | pid_isolyzer.xml                | outcome                     | DISK-SHARE-NOEVENTS                   |

<#validation>  a skos:Concept;
    skos:prefLabel "validation"@en;
    owl:equivalentClass evType:val;
    rdfs:subClassOf premis:Event.


# | 7  | TRANSCODING    |     x     | VIAA SP Agent ID           | VIAA Object ID VIAA Object ID      | pid_001_mkv.mkv pid_002_mkv.mkv | source source               | TAPE-SHARE-EVENTS TAPE-SHARE-EVENTS   |

<#transcoding>  a skos:Concept;
    skos:prefLabel "transcoding"@en;
    rdfs:subClassOf premis:Event.

# | 8  | QC             |     x     | VIAA SP Agent ID           | VIAA Object ID                     | pid.complex                     | outcome                     | TAPE-SHARE-EVENTS                     |

<#qc>  a skos:Concept;
    skos:prefLabel "quality control"@en;
    rdfs:subClassOf premis:Event.

# --- mediahaven PREMIS events

# |   Family   |                 Name                |       Legacy Name      | Since | Metadata Update |                                                     Description                                                    |
# |:----------:|:-----------------------------------:|:----------------------:|:-----:|:---------------:|:------------------------------------------------------------------------------------------------------------------:|
# | FLOW       | RECORDS.FLOW.TRANSCODE              | TRANSCODE              |       |                 | Transcode job is created                                                                                           |

<#transcode>  a skos:Concept;
    skos:prefLabel "transcode"@en;
    skos:broader <#transcoding>;
    mh:name "RECORDS.FLOW.TRANSCODE";
    rdfs:subClassOf premis:Event.

# | FLOW       | RECORDS.FLOW.TRANSCODED             | TRANSCODED             |       | #               | Transcode job is finished                                                                                          |

<#transcoded>  a skos:Concept;
    skos:prefLabel "transcoded"@en;
    skos:broader <#transcoding>;
    mh:name "RECORDS.FLOW.TRANSCODED";
    rdfs:subClassOf premis:Event.

# | FLOW       | RECORDS.FLOW.RETRANSCODE            | RETRANSCODE            |       |                 | Retranscode job is created                                                                                         |

<#retranscode>  a skos:Concept;
    skos:prefLabel "retranscode"@en;
    skos:broader <#transcoding>;
    mh:name "RECORDS.FLOW.RETRANSCODE";
    rdfs:subClassOf premis:Event.

# | FLOW       | RECORDS.FLOW.EXPORT                 | EXPORT                 |       |                 | Export job is created                                                                                              |

<#export>  a skos:Concept;
    skos:prefLabel "export"@en;
    skos:broader evType:exp;
    mh:name "RECORDS.FLOW.EXPORT";
    rdfs:subClassOf premis:Event.

# | FLOW       | RECORDS.FLOW.EXPORTED               | EXPORTED               |       |                 | Export job is finished                                                                                             |

<#exported>  a skos:Concept; 
    skos:prefLabel "exported"@en;
    skos:broader evType:exp;
    mh:name "RECORDS.FLOW.EXPORTED";
    rdfs:subClassOf premis:Event.

# | FLOW       | RECORDS.FLOW.ARCHIVED               | ARCHIVED               |       | #               | File has successfully acquired the Administative.ArchiveStatus on_disk or on_tape                                  |

<#archived>  a skos:Concept;
    skos:prefLabel "archived"@en;
    skos:broader evType:acc;
    mh:name "RECORDS.FLOW.ARCHIVED";
    rdfs:subClassOf premis:Event.


# | FLOW       | RECORDS.FLOW.SIP_ALREADY_ARCHIVED   | SIP_ALREADY_ARCHIVED   |       |                 | SIP was resubmitted while it is already archived based on the ExternalId                                           |

<#sip_already_archived>  a skos:Concept;
    skos:prefLabel "SIP already archived"@en;
    skos:broader evType:acc;
    mh:name "RECORDS.FLOW.SIP_ALREADY_ARCHIVED";
    rdfs:subClassOf premis:Event.

# | FLOW       | RECORDS.FLOW.SIP_ALREADY_PROCESSING | SIP_ALREADY_PROCESSING |       |                 | SIP was resubmitted while it is already processing based on the ExternalId                                         |

<#sip_already_processing>  a skos:Concept;
    skos:prefLabel "SIP already processing"@en;
    skos:broader evType:acc;
    mh:name "RECORDS.FLOW.SIP_ALREADY_PROCESSING";
    rdfs:subClassOf premis:Event.

# | FLOW       | RECORDS.FLOW.SIP_DETECTED           | SIP_DETECTED           |       |                 |                                                                                                                    |

<#sip_detected>  a skos:Concept;
    skos:prefLabel "SIP detected"@en;
    skos:broader evType:acc;
    mh:name "RECORDS.FLOW.SIP_DETECTED";
    rdfs:subClassOf premis:Event.

# | CREATE     | RECORDS.CREATE                      | CREATE                 |       | #               | Record is created                                                                                                  |

<#create>  a skos:Concept;
    skos:prefLabel "create"@en;
    owl:equivalentClass evType:cre;
    mh:name "RECORDS.FLOW.ARCHIVED";
    rdfs:subClassOf premis:Event.

# | UPDATE     | RECORDS.UPDATE                      | UPDATE                 |       | #               | Metadata of record is updated                                                                                      |

<#update>  a skos:Concept;
    skos:prefLabel "update"@en;
    owl:equivalentClass evType:mem;
    mh:name "RECORDS.UPDATE";
    rdfs:subClassOf premis:Event.

# | UPDATE     | RECORDS.UPDATE.PUBLISH              | PUBLISH                |       | #               | Record has been published from the ingest space or auto-published                                                  |

<#publish>  a skos:Concept;
    skos:prefLabel "publish"@en;
    owl:equivalentClass evType:mem;
    mh:name "RECORDS.UPDATE.PUBLISH";
    rdfs:subClassOf premis:Event.

# | DELETE     | RECORDS.DELETE                      | DELETE                 |       |                 | Record is logically deleted                                                                                        |

<#delete>  a skos:Concept;
    skos:prefLabel "delete"@en;
    mh:name "RECORDS.DELETE";
    rdfs:subClassOf premis:Event.

# | DELETE     | RECORDS.DELETE.UNDELETE             | UNDELETE               |       |                 | Logically deletion of record is undone                                                                             |

<#undelete>  a skos:Concept;
    skos:prefLabel "undelete"@en;
    mh:name "RECORDS.DELETE.UNDELETE";
    rdfs:subClassOf premis:Event.

# | DELETE     | RECORDS.DELETE.PERMANENTLY_DELETED  |                        | 21.2  |                 | Record is permanently deleted and this delete can no longer be undone, all storage is reclaimed shortly afterwards |

<#permanently_deleted>  a skos:Concept;
    skos:prefLabel "deletion"@en;
    owl:equivalentClass evType:del;
    rdfs:subClassOf premis:Event.

# | VALIDATION | RECORDS.VALIDATION.VIRUS_CHECK      | VIRUS_CHECK            |       |                 | Virus check is performed                                                                                           |

<#virus_check>  a skos:Concept;
    skos:prefLabel "virus check"@en;
    owl:equivalentClass evType:vir; 
    rdfs:subClassOf premis:Event.

# | VALIDATION | RECORDS.VALIDATION.MD5_CHECK        | MD5_CHECK              |       |                 | MD5 generated from file is compared with the reference                                                             |

<#md5_check>  a skos:Concept;
    skos:prefLabel "md5 check"@en;
    skos:broader evType:mes; # message digest calculation 
    rdfs:subClassOf premis:Event.

# | VALIDATION | RECORDS.VALIDATION.VERIFY           | VERIFY                 |       |                 | Fixity of the file will be checked by exporting it   |

<#verify>  a skos:Concept;
    skos:prefLabel "verify"@en;
    skos:broader evType:fix; 
    rdfs:subClassOf premis:Event.
                                                              
# | VALIDATION | RECORDS.VALIDATION.VERIFIED         | VERIFIED               |       |                 | Fixity check is finished      |

<#verified>  a skos:Concept;
    skos:prefLabel "fixity check finished"@en;
    skos:broader evType:fix; 
    rdfs:subClassOf premis:Event.

                                                                                     